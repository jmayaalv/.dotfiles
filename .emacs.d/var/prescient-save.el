
(funcall prescient-cache-callback :version '5 :history '#s(hash-table size 145 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("pathom.clj|allfunds" 98 "comment-line" 15 "~/Developer/beluca/" 95 "deps.edn" 45 "src/edge/api/core.clj" 58 "replace-string" 35 "test.clj" 49 "deps.edn|base" 63 "   [kane.allfunds.pathom :As kp.allfunds]􀍏" 85 "cider-classpath" 56 "src/main/com/wsscode/presentations/pathom3_data_nav/twitter/v2.clj" 43 "lsp-workspace-folders-remove" 41 "sql-providence.prod" 74 "deps.edn|allfunds" 60 "src/kane/pathom/pedestal.clj" 79 "*SQL: glacier.prod-1*" 70 "                                   com.wsscode/pathom-viz-connector {:mvn/version \"2021.10.16\"}􀤳" 52 "~/Developer/ms-edge/base/deps.edn􀀂" 53 "                        lsp-modeline-diagnostics-enable t􎂟" 17 "env/test/resources/config.edn" 28 "clear" 33 " allfunds.api{:key \"d721b8d1afa6e2a1ed921fcfece486c3\"}" 46 "(>def :swifter.field/trade-code (and string?􀊇" 20 "authinfo2.gpg" 34 "src/main/com/wsscode/presentations/pathom3_data_nav/twitter/v1.clj" 44 "src/edge/api/base/http.clj" 25 "~/Developer/kane-labs/swifter/message/" 4 "v2.clj" 42 "pedestal.clj􀀁" 75 "projects/allfunds/src/kane/allfunds/pathom.clj" 94 "[\"I84452C1201100099\" \"I84451C1201100100\" \"I84450C1201100101\"]" 19 "com.wsscode.pathom3.interface.async.eql.cljc" 78 "pathom.clj􀀁" 96 "*SQL: providence.prod*" 72 "src/kane/http.clj" 90 "eql.cljc" 54 "pathom.clj|allfunds􀀁" 47 "src/swifter/message/mt502.clj" 3 "src/java/swifter/true_broker/java/SoapTransportOptions.java" 10 "                (use-package lsp-mode􍭊" 8 "/Users/jmaya/.m2/repository/com/wsscode/pathom3/2021.11.16-alpha/pathom3-2021.11.16-alpha.jar􀍉" 55 " :com.wsscode.pathom3.interface.async.eql/parallel? true,􀀅􂡌" 69 "deps.edn|base􀀁" 68 "   [edge.fund.pathom :as ep.fund]􀌭" 87 "*cider-repl ms-edge/base:localhost:64585(clj)*" 64 "deps.template.edn" 84 "core.clj" 59 "projects/allfunds/src/kane/allfunds/resolvers.clj" 99 "~/Developer/ms-edge/edge-api/src/edge/api/" 48 "presentation-data-navigation-with-pathom3" 37 "pathom.clj|allfunds/src/kane/allfunds" 89 "*scratch*􀀁" 81 "scratch.sql􀀁" 73 "config.org􀀁" 2 "  (Thread/sleep 1000)􀯎" 76 "~/.dotfiles/.emacs.d/org/config.org􀀂" 9 "package-refresh-contents" 14 "pathom.clj|fund􀀁" 91 "http.clj|edge-asset/src/kane" 93 "config.org" 12 "tramp-cleanup-all-connections" 32 "                       (.setReference(:trade-code args))))􀙈" 21 "(:allfunds.fund/ongoing-charges @(operational {} {:allfunds.api/key \"d721b8d1afa6e2a1ed921fcfece486c3\"
                                            :allfunds.fund/isin \"GB0006011133\"}))" 88 "                                   com.wsscode/pathom3              {:mvn/version \"2021.11.16-alpha\"}􀆋" 51 "~/Developer/ms-edge/kane-pathom/" 80 "tramp-cleanup-this-connection" 31 "core.clj􀀁" 77 "*SQL: glacier.prod*􀀁" 82 "package-install" 13 "(comment
  (p.eql/process {})
  (:allfunds.fund/ongoing-charges @(operational {} {:allfunds.api/key \"d721b8d1afa6e2a1ed921fcfece486c3\"
                                            :allfunds.fund/isin \"GB0006011133\"}))
  ,)" 83 "v1.clj" 39 "     (use-package flycheck􍘨" 18 "*cider-repl ms-edge/edge-api:localhost:51459(clj)*" 22 "src/kane/utils.clj" 92 "~/Developer/ms-edge/edge-api/" 26 "lsp-organize-imports" 50 "sql-glacier.prod" 71 "cider" 57 "sql-glacier.test" 29 "** Modeline􃽍" 16 "http.clj|base􀀁" 66 "code.clj􀀁" 1 "env/dev/resources/config.edn" 36 "~/Developer/ms-edge/edge-asset/" 24 "deps.template.edn|edge-asset" 61 "   [com.wsscode.pathom3.interface.async.eql :as-alias p.a.eql]􀂼" 65 "~/Developer/kane-labs/swifter/true-broker/" 5 "     (use-package doom-modeline􃽳" 7 "src/kane/allfunds/pathom.clj" 23 "deps.edn|presentation-data-navigation-with-pathom3" 38 "*scratch*" 11 "                                   com.wsscode/pathom3              {:mvn/version \"2021.10.20-alpha\"}􀆋" 67 "/Users/jmaya/Developer/presentation-data-navigation-with-pathom3" 40 "~/Developer/ms-edge/edge/src/clj/edge/component/trader/code.clj􀀂" 6 "resolvers.clj" 97 "new.test" 0 "deps.edn|efekt" 62 "src/edge/fund/pathom.clj" 86 "             (glacier.test􀀁􀖌" 30 "config.edn|test" 27)) :frequency '#s(hash-table size 730 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("deps.edn" 2.145256482259135 "  (proto/order-processor order)􀟹" 0.0808811852468417 "sql-omi.prod" 2.851333781315621 "*SQL: omi.prod*" 3.0386211265860803 "sql-glacier.prod" 4.113337135191113 "*SQL: glacier.prod*" 1.9355576000590928 "clear" 12.808915170970792 "replace-string" 2.3426810149761024 "~/Developer/db-support/sql/glacier/20211116154459-GIBAU-2282.up.sql􀀂" 0.07564052170272835 "readme.md" 1.1879963357156702 "atlas-migration" 0.8390622098849385 "core.clj|db" 0.08692880458061433 "                          (assoc ::tx/code (:edge.trade/flow operation)))􀕽" 0.15997295610436987 "glacier" 0.08217741662750802 "~/Developer/db-support/" 0.4926141737084472 "src/clj/kane/intent/interface.clj" 0.3107252702043386 "origin" 0.9099773835615766 "*Abbrevs*" 0.3015561335851415 "(deftest  ^:integration  new-investment-test􀹈" 0.5594931341202244 "src/clj/edge/impl/fee/calculate.clj" 0.5898641146913123 "(:allfunds.fund/ongoing-charges @(operational {} {:allfunds.api/key \"d721b8d1afa6e2a1ed921fcfece486c3\"
                                            :allfunds.fund/isin \"GB0006011133\"}))" 0.5805286455780104 "schedule.clj" 0.21409977647399026 "master" 0.1942489697075719 "~/Developer/ms-edge/edge/env/dev/resources/scratch.rest􀀂" 0.10011318234745216 "fund.clj|trader2􀀁" 0.1655188828794444 "pathom.clj" 0.05495836682894518 "~/Developer/ms-edge/edge/" 1.0420536822886863 "core.clj􀀁" 3.766307233129805 "~/Developer/ms-edge/edge/src/clj/edge/component/trader2/fsm/intent.clj􀀂" 0.0557246228100709 "*cider-repl swifter/true-broker:localhost:59591(clj)*" 0.05539077659481576 "(defn- insert!􀫢" 0.13318374636336955 "lsp-organize-imports" 5.908215505545861 "sql-glacier.test" 7.838945717096235 "src/clj/edge/component/book/intent.clj" 0.09547335772978623 "SoapTransportOptions.java" 0.05522460426503131 "package-install" 0.9473552137914398 " #:pages.internal.ViewFeeCalculation􅷕" 0.07044088264904425 "~/Developer/ms-edge/edge/test/clj/edge/test/domain/" 0.23855609367954658 "                          ::d.fund/currency ::d.fund/settlement-days ::d.fund/valuation-days ::d.fund/decimals􀉫" 0.11845745594733442 "(defn sessions􀌕" 0.2342941605351689 "scratch.sql􀀁" 2.2795211502409645 "json-mode" 0.1950590575495539 "/Users/jmaya/.m2/repository/com/wsscode/pathom3/2021.11.16-alpha/pathom3-2021.11.16-alpha.jar􀍉" 0.7584982177744161 "magit-log-select-mode" 0.2034388560824639 "src/edge/fund.clj" 0.49507049582283824 "new.test" 2.381735214802444 "   [com.wsscode.pathom3.interface.async.eql :as-alias p.a.eql]􀂼" 0.7294434395990105 "  \"Creates a stores a new instruction\"􀑟" 0.1709043383387363 " :com.wsscode.pathom3.interface.async.eql/parallel? true,􀀅􂡌" 1.3862991319079636 "src/clj/edge/component/trader2/intent.clj" 0.17763353014655003 "test/clj/edge/test/integration/argus/fixtures.clj" 0.21930823888458062 "resources/migrations/20210812105147-fund-cut-off.up.sql" 0.24731395059039465 "http.clj" 1.4136199273500465 "~/Developer/beluca/projects/allfunds/src/kane/allfunds/" 0.9507147107076712 "test/clj/edge/test/fund_test.clj" 2.1784173034015604 "(defn make􀉣" 0.3280225750708758 "                   (t/days 1))􀬜" 0.12391818009523517 "src/edge/data_readers.clj" 0.6464125382469784 "transaction.clj􀀁" 0.09536815201137618 "test.sql" 0.10316673436256728 "*Messages*􀀁" 0.5998009033058018 "intent.clj|book􀀁" 0.07825488629935466 "src/clj/edge/data_readers.clj" 0.15949303723605676 "edge-api.edn" 0.1986072836794012 "projects/allfunds/src/kane/util.clj" 0.4209258463093902 "new.txt􀀁" 0.062052380221497304 "fsm.clj" 0.2936616867936352 "             ::tx/cash-in          (helper/settled-tx! env􀱣" 0.06436941149255469 "          (tap> :settle)􂏰" 0.18758719075356428 "src/java/swifter/true_broker/java/SoapTransportOptions.java" 1.0127222997724126 "lsp" 1.8408512716474867 "r" 2.7324005476481643 "                                   com.wsscode/pathom3              {:mvn/version \"2021.10.20-alpha\"}􀆋" 0.7653452467968931 "pedestal.clj􀀁" 1.4068170990766398 "*SQL: glacier.prod*􀀁" 1.2007431574160807 "              (sanlam.prod􀀁􀃀" 0.21009531645091764 "core.clj|trader􀀁" 0.3250792196481553 "http.clj|allfunds􀀁" 0.8649303266040129 "                 [org.clojure/clojure \"1.11.0-alpha3\"]􀍌" 0.2706411720577021 "src/clj/edge/impl/order/instruction.clj" 0.0797663923719614 "(defn next-trading-date􁼱" 0.21603829391835358 "~/Developer/ms-edge/edge/src/clj/data_readers.clj" 0.15019134089572003 "~/Developer/ms-edge/edge/src/clj/edge/component/trader2/calendar.clj􀀂" 0.06043351614023887 "-- :name get-transaction-by-ref :?? :txn􀏫" 0.18040153877947715 "*cider-repl ms-edge/base:localhost:64585(clj)*" 0.7338398742858571 "src/clj/edge/utils/core.clj" 0.05092158191429929 "(defn next-trade-date [{:keys [feed-date date-time fund calendar trade-account ]}]􁬈" 0.22599735912903762 "deps.edn|allfunds" 0.7427123967299725 "(defn- insert!􀦈" 0.09286888353638029 "calendar.clj|trader2" 0.2685832936588803 "transaction.clj" 0.18269886193466023 "fee.sql􀀁" 0.11121432385245428 "new.test􀀁" 0.19447388037690524 "sql-allangray-test1.dev" 0.09674120336598169 "  com.wsscode/pathom-viz-connector {:mvn/version \"2021.10.16\"},􀆬" 0.41216556193809956 "core.clj|efekt" 1.1859367240683036 "20211129141803-ARGUSPS-114.up.sql" 0.35361019344317807 "fixtures.clj" 0.21865031416792688 "(defn increase-units! [{:kane.time-manager/keys [time-machine] :as env}􀶬" 0.09370974359582875 "core.clj|trader2􀀁" 1.1220793834369938 "  :edge.domain.settlement/unit-price = USD 1􀃛" 0.12655197242689553 "deps.edn|base􀀁" 1.7451740590322187 "*SQL: sanlam.test*" 0.4535239571581617 "  (make (assoc cmd :action :buy-forex)))􀙈" 0.06360044755618212 "src/clj/data-readers.clj" 0.14884366993869652 "                calendar         (calendar/get! env fund)􁒳" 0.12061225893750463 "src/efekt/db/command.clj" 0.5025638584410194 ":kane.time/time-machine " 0.07943619929471961 "(defn next-pricing-date􂆓" 0.2308007714369984 "test/clj/edge/test/integration/dca/fixtures.clj" 0.2179943632254231 "src/clj/edge/domain/fee/fee.clj" 0.38929579246519513 "  [date next-session]􁔁" 0.4499627760021468 "src/edge/api/base/http.clj" 3.0901488682478484 "{:fees            {:eql [{[:edge.account/code \"{{code}}\"] [{:edge.account/fees [:edge.contract/code :edge.fee/id :edge.fee/type :edge.fee/status :edge.fee/date􁎕" 0.07022956000109712 "order.clj" 0.08161350543467165 "20210812105147-fund-cut-off.down.sql" 0.24955319817556032 "*SQL: glacier.prod*<2>" 0.46356748672325904 "allfunds.clj" 0.4260150682903063 "resources/sql/instruction.sql" 0.13358449986295842 "src/clj/edge/impl/core.clj" 0.07991496987926629 "~/Developer/kane-labs/swifter/true-broker/" 2.896652186728925 "        outdir  \"/tmp/allfunds/out\"􀒰" 0.25639332541549026 "~/Developer/ms-edge/edge/src/clj/edge/component/trader/code.clj􀀂" 0.9704017769489168 "tramp-cleanup-all-connections" 2.323072249565036 "         clj-http/clj-http                   {:mvn/version \"3.10.3\" :exclusions [commons-logging/commons-logging]}􀏥" 0.5241541600479452 "        {session-time ::session/time} (trade-account/next-session trade-account date-time)􁯈" 0.20838796743703716 "protocol.clj" 0.1018621281345501 "*SQL: localhost.dev-1*" 0.3759647144285178 "~/Developer/beluca/projects/allfunds/src/kane/allfunds" 0.4272969591678097 "projects/allfunds/src/kane/allfunds/resolvers.clj" 0.5450319718468707 "interface.clj|intent" 0.08112455892361253 "                                                                {:edge.trade-account.session/id id􀙗" 0.2096439443073827 "(defn make􀅶" 0.06153283336129571 "    (save! context tx))􂐻" 0.09148418344584364 "portal.api/open" 0.30512746930117546 "deps.template.edn" 1.6478408374956213 "src/clj/edge/application/edge.clj" 0.25793863578246295 "feature/trade++" 0.08082159181450997 "(d.settlement/make {:type       :trader
                                             :feed-date  feed-date
                                             :settled-on now
                                             :applied?   true
                                             :unit-price one
                                             :units      units
                                             :completed? true})" 0.08797982101717988 "src/clj/edge/component/trader2/impl/register.clj" 0.06794784701632581 "magit-log" 0.2028285395142165 "clojure-mode" 0.10193429342022124 "GB0006011133" 0.4661977907881453 "(defmethod calculate :percent􁒷" 0.39046719404733715 "~/Developer/ms-edge/edge-api/" 8.367369653970336 "[\"I84452C1201100099\" \"I84451C1201100100\" \"I84450C1201100101\"]" 0.9276389118674717 "deps.edn|presentation-data-navigation-with-pathom3" 0.8325391341551359 "~/Developer/ms-edge/edge-asset/" 4.832814533922735 "src/clj/edge/infrastructure/repository/transaction.clj" 0.8913875396647796 "~/Developer/ms-edge/efekt/src/efekt/" 0.525731354110276 "fund.clj|domain􀀁" 0.5461501939513629 "(defn decrease-units! [{:kane.time/keys [time-machine] :as env}􁉁" 0.13560642826727143 "core.clj|trader" 0.06815088981940523 "      (let [{sessionid ::session/id} (trade-account/next-session trade-account )]􀮱" 0.6689839374351642 "pathom.clj􀀁" 0.624749639850662 "(defn insert!􀤱" 0.29439432427761336 "(defn get-pending􀨎" 0.3211957882080141 "/Users/jmaya/Developer/presentation-data-navigation-with-pathom3" 0.8275513922024125 "            (repo.position/save! (pos-hist/make {:instrument    hold􀻋" 0.05777038179888613 "   [kane.allfunds.pathom :As kp.allfunds]􀍏" 0.5910887648323622 "*SQL: oic.prod*" 0.5516679082487352 "(defn make􀙧" 0.21668835899533959 "result.clj􀀁" 0.18479021516681435 "test.sql􀀁" 0.10378853145451127 "http.clj|base􀀁" 1.4039152278587057 "http.clj<2>" 0.4247370230854354 "rebalance.clj" 0.21474400849948871 "buy.clj􀀁" 0.7296899077751117 "projects/allfunds/util.clj" 0.4184040795641506 "util.clj" 1.2527093568193997 "  (save! [_ context tx]􂐣" 0.0912097308955061 "cider" 0.7539540549517295 "(deftest ^:integration switch-test􊋛" 0.24362643291242728 "                                                 :edge.trade/flow            \"theflow\"􀩭" 0.138488645958168 "(defn with-closing-time􀖇" 0.28826740662554257 "*SQL: omi.prod*􀀁" 0.07755690909058713 "src/clj/edge/domain/trade/account.clj" 1.9437514783935521 "src" 0.3999661937018806 "~/Developer/beluca/projects/allfunds/src/kane/http.clj" 0.4234628120161791 "~/Developer/ms-edge/kane-pathom/" 1.9430537143961684 "test/clj/edge/test/integration/argus/valuation_test.clj" 0.2755642763245403 "pom.xml" 0.0718004427933821 "~/Developer/kane-labs/swifter/message/" 1.8928077309728515 "~/Developer/beluca/projects/api-client/" 0.8502516748026737 "(defn- base-trade-code [transaction trade-account]􀏂" 0.33802759110996905 "sql-set-sqli-buffer" 0.13852258382533889 "src/clj/edge/db/result.clj" 0.30337364509289305 "src/clj/edge/component/trader2/account.clj" 0.09629779022312861 "src/clj/edge/infrastructure/repository/trade/account.clj" 1.8641583384976594 "*clojure-lsp::stderr*" 0.10347716586014773 "config.org" 2.288298519074132 "     (use-package flycheck􍘨" 0.9304302024748964 "                 [swifter/true-broker-clj \"2.2.6\"]􀔢" 0.2533304230803655 "  test.utils/with-rollback􀣯" 0.28057693442917 "        {session-time ::session/time} (next-session trade-account date-time)􁲸" 0.22804360051362357 "'999600'" 0.7704478537244118 "src/main/com/wsscode/presentations/pathom3_data_nav/twitter/v1.clj" 3.236524918755689 "(defn instruction!􀐅" 0.09627828038278567 "                       (.setReference(:trade-code args))))􀙈" 0.9220814271464737 "test/clj/edge/test/trade/manual_settlement_test.clj" 0.7990242139341973 "magit: db-support" 0.7404370117450619 "          (.atTime (plus-business-days calendar trade-day (t/new-period 1 :days))􀷴" 0.11988967089421004 "time.clj" 0.4250689796195538 "~/Developer/beluca/projects/allfunds/src/kane/" 0.42219242358013054 "develop" 1.171278065386571 "position.clj" 0.1920005540874638 "deps.edn|allfunds􀀁" 0.40724178765469166 "        res    (db/insert-batch! db {:batchid        nextid􀘋" 0.32999960269059514 "*SQL: oic.prod*<2>" 0.05310918910762583 "(get-in intent [::tx/codes :forex])" 0.1389053620443009 "sql-localhost.dev" 1.1347982644915542 "            [edge.domain.settlement :as settlement]))􀃫" 0.1831320875767867 "src/clj/edge/domain/instrument.clj" 0.3960739267566719 "    --~ (when (:code params) \" and t.code = :code\" )􀧲" 0.3241039819892108 "(defn to-local-date􀓺" 0.20589854228901325 "test/clj/edge/test/order_test.clj" 0.5299532324811886 "resources/sql/settlement.sql" 0.36627078776142874 "LPR100006031" 0.19682517516054926 "(extend-type java.time.LocalDateTime􁨈" 0.29263060788086614 "                 [org.clojure/clojure \"1.11.0-alpha2\"]􀍌" 0.36649029620567725 "http.clj􀀁" 0.06041744354708023 "  (or (repo.batch/get-pending context (account/code account) traded-on)􀏊" 0.3183136897281373 "core.clj|impl" 0.08015543618782978 "http.clj|efekt" 1.0467925518599939 "position.clj􀀁" 0.09512812965507718 "promesa.clj" 0.4606285416677907 "(defn next-trading-date􁻲" 0.2109074910864818 "*SQL: providence.prod*" 0.6931214098997832 "src/efekt/core.clj" 0.14185769621429614 "(defintent buy [intent]􁆌" 0.13765896048023263 "impl.clj" 0.18250809121525663 "core.clj" 0.8316203993125694 "~/Developer/ms-edge/edge-core/" 0.9462213032435893 " {:fees            {:eql [{[:edge.account/code \"{{code}}\"] [{:edge.account/fees􁅚" 0.07001887132109383 "src/clj/edge/infrastructure/repository/trade/batch.clj" 0.6492418047259134 "      (-> (get-trade-batch-on-date context trade-account (tx/traded-on transaction))􀭗" 0.31927150424085987 "src/clj/edge/component/trader2/fsm/intent.clj" 2.583040110739753 "src/clj/edge/component/trader2/calendar.clj" 0.262755077713977 "batch.sql" 0.33198854607010114 "argus" 0.35788553263872913 "                  [swifter/message \"2.2.6\"]􀓉" 0.34521212591084205 "intent.clj|trader2" 0.11460647176690894 "src/kane/utils.clj" 0.5701571885437869 "~/Developer/ms-edge/efekt/" 1.1557337839721604 "test.clj" 0.7910835400474212 "json-pretty-print" 0.1956459955361624 "                                   com.fulcrologic/guardrails       {:mvn/version \"0.0.12\"}􀏐" 0.4891563302522258 "fund_test.clj􀀁" 0.2605946187455801 "interface.clj􀀁" 0.10157132021027633 "src/clj/edge/data_redars.clj" 0.8462794550089227 "check_connection.clj" 0.054893753660879514 "v2.clj" 0.8225935318117279 "/.clj-kondo/" 0.4048020021048524 "src/edge/api/core.clj" 8.252958621178392 "src/clj/edge/time.clj" 0.6653482285655421 "helper.clj􀀁" 0.19680654015738278 "src/clj/edge/component/trader2/fsm/cash.clj" 0.12073206672251224 "2021-11-30 23:45:00.004" 0.47753910888389456 "src/efekt/http.clj" 0.5147898635715258 "instruction.clj􀀁" 0.12170309671769704 "/Users/jmaya/Developer/beluca" 0.4416549077612003 "comment-box" 0.5040760867011227 "deps.txt" 0.05767394054819964 "*SQL: oic.prod*􀀁" 0.47275448128568304 "intent.clj" 0.0846781169260533 "src/clj/edge/impl/order/new_account.clj" 0.5184870329850344 "pathom.clj|allfunds/src/kane/allfunds" 1.1286724027187327 "(comment
  (p.eql/process {})
  (:allfunds.fund/ongoing-charges @(operational {} {:allfunds.api/key \"d721b8d1afa6e2a1ed921fcfece486c3\"
                                            :allfunds.fund/isin \"GB0006011133\"}))
  ,)" 0.6018409781711584 " allfunds.api{:key \"d721b8d1afa6e2a1ed921fcfece486c3\"}" 0.8006481694852418 "~/.dotfiles/.emacs.d/org/config.org􀀂" 1.1335778384944224 "**** Portal􌶈" 0.29105727771680767 "20211116154459-GIBAU-2282.up.sql" 0.11485845326813054 "src/clj/edge/services/core.clj" 0.08039662606602786 "999001" 0.08240262250111931 "(>def :swifter.field/trade-code (and string?􀊇" 0.9248559951318693 "lsp-rename" 0.5341836350571771 "code.clj􀀁" 2.964170595485757 "authinfo2.gpg" 0.9896639580386334 "config.org􀀁" 0.9821344612135428 "deps.edn|base" 0.7360480183408797 ".gitignore" 0.9081781981655024 "                        lsp-modeline-diagnostics-enable t􎂟" 1.86926789832121 "intent.clj|fsm􀀁" 0.1405273062928097 "package-refresh-contents" 0.9445131481500655 "contract.clj" 0.09484274526611194 "*SQL: localhost.dev*" 0.27160900096816876 "*SQL: localhost.dev*􀀁" 3.655874312619805 "      make))􀜭" 0.05031326720134487 "(defn next-session􀌾" 0.30796549362893255 "sql-providence.prod" 0.6889689195330736 "data_redars.clj" 0.5798061720114404 "~/Developer/ms-edge/edge/src/clj/edge/" 0.2690197607959044 "interface.clj|validator" 0.08210539887935789 "(defn validate!􁅒" 0.08063854169110117 "src/clj/edge/domain/fund.clj" 1.59569862170878 "test/clj/edge/test/trade/allfunds_test.clj" 1.8413117437019384 "src/clj/edge/db/core.clj" 1.1851798906637148 "cider-classpath" 2.1844294875583365 "   ::date          (time/to-local-date (date/java->joda date))􀐉" 0.09715001004597851 "portal.api/clear" 2.014671849222677 "data_readers.clj|clj/edge" 0.15477232674484923 "src/clj/edge/impl/calendar.clj" 0.4486849635315988 "src/clj/kane/intent/impl.clj" 0.1750619737959236 "pathom.clj|allfunds􀀁" 6.763850152135631 "(defn next-trade-date [{:keys [feed-date date-time fund calendar trade-account ]}]􁫿" 0.4465971563002562 "src/kane/pathom/pedestal.clj" 1.8912178455868245 "       (defun sql-allangray-test1.dev ()􀀁􁏇" 0.09342585962927756 "             (allangray.test1􀀁􀶝" 0.0621283522059958 "project.clj" 1.5890700554740516 "*SQL: localhost.dev-1*􀀁" 2.3610241389068674 "     (use-package doom-modeline􃽳" 0.9674905716180701 "(s/def ::flow #{:trade :buy-fund :sell-fund :buy-hedge :sell-hedge})􁽄" 0.10717637025942697 "*SQL: omnia.prod*" 0.05440119052714909 "src/clj/edge/component/trader2/fsm/helper.clj" 0.9420756402167875 "sql-oic.prod" 0.7480051671347595 "resolvers.clj" 0.5549463880672914 "(extend-type LocalDateTime􁭴" 0.08640801411237187 "src/clj/edge/domain/instruction.clj" 0.6113706335308735 "                tx-code          (get-in intent [::tx/codes :buy])􁋋" 0.17664703238700202 "env/dev/resources/scratch.rest" 0.48253683588264873 "*SQL: argus.prod-1*" 1.0932099686271772 "resources/sql/batch.sql" 0.6531548554650043 "~/Developer/beluca/" 1.3977168234832458 "ims-core/src/main/resources/eql/edge-api.edn" 0.2682521612397129 "          #dbg (let [instruction-code (str (utils/uuid))􀓽" 0.11564414984586797 "(defn tx! [env􀦏" 0.11529721739633036 "*cider-result*" 0.11774777732875394 "core.clj|clojure-1.11.0-alpha3.jar:clojure" 0.2344368843915458 "src/clj/edge/domain/trade/batch.clj" 0.9860834077651784 "src/clj/edge/utils/spec.clj" 0.30425356468751624 "tramp-cleanup-this-connection" 2.597132344092965 "*cider-repl ms-edge/edge-api:localhost:51459(clj)*" 0.9110661429076764 "~/Developer/ms-edge/edge/src/clj/" 0.14929154457241375 "fsm􀀁" 0.3094152076543361 "src/clj/edge/infrastructure/repository/instruction.clj" 0.2692079380353314 " {:new {:extra-deps {com.github.seancorfield/clj-new􀗖" 0.3963772862467064 "interface.clj|trader2􀀁" 0.05228323246927538 "src/clj/edge/component/trader2/core.clj" 2.072950249306172 "env/test/resources/config.edn" 3.644289505110815 "(defn next-session􀌣" 0.20776280353472606 "http.clj|edge-asset/src/kane" 0.5684467169781556 "sql-argus.prod" 1.0284303267767627 "        trade-account1 (trade-account/make \"tenant\" \"account\" :a-trader {::})]􀝬" 0.2349991580091965 "test/clj/edge/test/integration/fee/negative_fee_test.clj" 0.24144036635199037 "new.clj􀀁" 0.49463013370391545 "new.clj" 0.4946368312934417 "(defn make􀖷" 0.296168670784282 "resources/migrations/20211126123211-fund-cutoff.up.sql" 0.5703147253986632 "src/clj/edge/infrastructure/repository/order.clj" 1.0741454109201154 "        res     (db/insert-order! db {:orderid            orderid􂉞" 0.26263067428033166 "*cider-repl ms-edge/edge:localhost:57391(clj)*􀀁" 0.26500860363598966 "(defn next-trading-date􁘙" 0.2839692618772342 "src/clj/edge/component/trader2/interface.clj" 0.3344391943623357 "calendar.clj|trader2􀀁" 0.43406211818963786 "(s/def ::cut-off ::specs/time)􂣑" 0.2856807754026716 "deps.template.edn|edge-asset" 0.7404842595397826 "src/clj/edge/component/trader2/fund.clj" 0.48256192133242726 "*scratch*" 0.9530650263643888 "src/clj/kane/time_manager/interface.clj" 0.46292487550645484 "(extend-type LocalDate􁣛" 0.2917527160572235 "src/clj/edge/infrastructure/repository/fund.clj" 0.2935111413047805 "(defn next-trading-date􁫮" 0.43990139787959714 "calendar.clj|impl" 0.1174132907949038 "resources/migrations/20211126151051-batch-session.up.sql" 0.3145110800385499 "COMMIT_EDITMSG" 0.3116889636255648 "~/Developer/ms-edge/edge/src/clj/edge/component/trader2/" 0.7763609587969 "origin/argus" 0.7125533164535035 "*SQL: argus.prod-1*􀀁" 0.3600425475410476 "eql.cljc" 0.7630697687590515 "20211129141904-ARGUSPS-114.up.sql" 0.3834912872472453 "env/dev/resources/scratch.sql" 0.3940025899248023 "'manual-switch-48240-1'" 0.39518815438796623 "projects/allfunds/src/kane/http.clj" 0.9007389392623032 "projects/allfunds/src/kane/allfunds/http.clj" 0.9061677904951597 "src/edge/fund/pathom.clj" 1.676742686484833 "" 0.4833128159417707 "src/clj/edge/component/trader/helper.clj" 0.08464431289394823 "helper.clj|trader" 0.08489900992371939 "                                   org.martinklepsch/clj-http-lite  {:mvn/version \"0.4.3\"}􀡺" 0.5225816975678014 "lsp-workspace-folders-remove" 1.2916125952702298 "         org.martinklepsch/clj-http-lite  nil􀏂" 0.5320877315740353 "org.clj-commons/clj-http-lite " 1.064180266347253 "   [edge.fund.pathom :as ep.fund]􀌭" 0.5857849093861247 "pathom.clj|fund􀀁" 0.571872806964681 "src/kane/http.clj" 2.7871354838456144 "projects/allfunds/src/kane/allfunds/pathom.clj" 0.5650411526967395 "pathom.clj|allfunds" 0.5532815489030894 "src/kane/allfunds/pathom.clj" 5.058715903095634 "*scratch*􀀁" 0.6410374913000684 "com.wsscode.pathom3.interface.async.eql.cljc" 0.6507402031657327 "                                   com.wsscode/pathom3              {:mvn/version \"2021.11.16-alpha\"}􀆋" 0.7746195551602378 "                                   com.wsscode/pathom-viz-connector {:mvn/version \"2021.10.16\"}􀤳" 0.7722956964947572 "~/Developer/ms-edge/base/deps.edn􀀂" 0.7699788094052729 "  (Thread/sleep 1000)􀯎" 0.6625775073218249 "deps.edn|efekt" 0.7382628067611632 "*SQL: glacier.prod-1*" 0.6972989277760897 "src/main/com/wsscode/presentations/pathom3_data_nav/twitter/v2.clj" 2.44810486976428 "env/dev/resources/config.edn" 1.6384564705316884 "~/Developer/ms-edge/edge-api/src/edge/api/" 0.79346393184295 "v1.clj" 0.8300415167526705 "presentation-data-navigation-with-pathom3" 0.835044266956004 "  [{::keys [action code type expected-date completion-date flow]} transaction-ref feed-date]􀼨" 0.05046466118489957 "src/clj/edge/domain/transaction.clj" 0.05061651071705072 "(defn make􀚉" 0.05076881716855639 "(defn- insert-settlement!􀼐" 0.051228491808725365 "        new-settlements (map #(insert-settlement! context transaction %)􁢋" 0.051382639727909095 "src/clj/edge/domain/settlement.clj" 0.2242693986930419 "     (applied-settlements transaction to-date)􁞺" 0.05169232846775944 "lsp-treemacs-references" 0.1764374506026697 "src/clj/edge/domain/contract.clj" 0.052003883735217124 "(defn- update-units􁙋" 0.052317316780046384 "(s/def ::action #{:buy-hold :buy-fx :sell-hold :buy-encashment :sell-encashment :buy-fund :sell-fund :buy-forex :buy-notification-pending :sell-notification-pending􁯲" 0.11110149599522498 "   [kane.intent.interface :refer [defintent]]􀌾" 0.052791011955682046 "sql-omnia.prod" 0.05423798695556764 "lsp-doctor" 0.056060481152656466 "intent.clj􀀁" 0.5068683663873219 "  (repo.calendar/get-active context code))􀚫" 0.060252215591818155 "(defn get! [context {::calendar/keys [code]}]􀙽" 0.06061536222691963 "                calendar         (calendar/get! env fund)􁉪" 0.0609806975861583 "src/clj/edge/component/trader/core.clj" 0.44603601078144983 "(defn register-trades! [context]􀛗" 0.3796355473786032 "resources/sql/transaction.sql" 0.9262657870709566 "-- :name insert-registered-transaction! :! :n􀉲" 0.06265214773674131 "src/clj/edge/component/trader2/fsm/buy.clj" 1.692829057624584 "~/Developer/ms-edge/edge/src/clj/edge/component/trader2/fsm/fund.clj􀀂" 0.06475737291368056 "fund.clj|fsm" 0.06495222960248802 "~/Developer/ms-edge/edge/src/clj/edge/component/trader2/fsm/" 0.06514767262034907 "  test-utils/with-rollback􀑱" 0.06613374458140069 "order_test.clj􀀁" 0.34459164985027785 "                          ::d.fund/currency        :money/currency􀔓" 0.07502853467293165 "(defintent settle [{tx-ref              ::tx/ref􂊸" 0.07593567038626761 "                tx-ref           (:edge.trade/flow intent) ;; The code of the flow will be assumed to be the trade of the tx that buys the fund􁆆" 0.07685377386281522 "core.clj|services" 0.0823524562481022 "buy.clj" 0.08260025701915967 "(defn- get-contract-fees􀚋" 0.10132360506834069 "calendar.clj|impl􀀁" 0.10162849053996058 "      (defun sql-sanlam.prod ()􀀁􂆤" 0.10441407618493521 "sql-sanlam.test1" 0.4217615739189808 "         (my-sql-connect 'postgres 'sanlam.test))􀀁􂐧" 0.10535946954991225 "sql-sanlam.test" 0.7732795365574181 "               (sql-name \"sanlam.test\")􀀁􀉰" 0.1069541852868792 "     (defun sql-sanlam.test ()􀀁􂎯" 0.2161757511028109 "             (sanlam.test􀀁􀉖" 0.10759880975612816 "src/clj/data_readers.clj" 0.15155121403110391 "data_readers.clj|edge" 0.15523804086745158 "data_readers.clj|clj" 0.15570515633646095 "transaction.clj|repository􀀁" 0.3462927078865149 "                                         :strategy         :fixed􀝳" 0.2199681433145242 "                          :type            :fixed􁸛" 0.2206300334147685 ".gitignore|allfunds" 0.8035465361205538 "projects/allfunds/deps.edn" 1.3975678930611743 "             (glacier.test􀀁􀖌" 0.884100203995605 "config.edn|test" 0.8974819010978248 "src/swifter/message/mt502.clj" 1.8985032406949363 "** Modeline􃽍" 0.9388545698794984 "comment-line" 0.9416796087056153 "                (use-package lsp-mode􍭊" 0.9645880999032158)) :serial-number '15061)
